# -*- coding: utf-8 -*-
"""Data_Cleaning_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wo7VnByoJnclF3VwnVi-9Egqe9WXztuw
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
pd.set_option('display.max_columns',None)
pd.set_option('display.max_rows',None)

dataset_path = r"https://drive.google.com/uc?export=download&id=1BiGZSedP4BIIuTbVTBod0hVgFImaz08c"
df = pd.read_csv('train.csv')
df.shape

df.info()

null_var = df.isnull().sum()/df.shape[0] * 100
null_var

df.isnull().sum().sum()

drop_cols = null_var[null_var > 17].keys()
drop_cols

df2_num = df.select_dtypes(include=['int64','float64'])
df2_num.shape

sns.heatmap(df2_num)

df2_num[df2_num.isnull().any(axis=1)]

df2_num.isnull().sum()

missing_num = [var for var in df2_num.columns if df2_num[var].isnull().sum() > 0]
missing_num

plt.figure(figsize=(10,10))
sns.set()
for i,var in enumerate(missing_num):
  plt.subplot(2,2,i+1)
  sns.distplot(df2_num[var], bins = 20, kde_kws = {'linewidth': 5, 'color' : '#DC143C'})

df3_mean = df2_num.fillna(df2_num.mean())
df3_mean.isnull().sum().sum()

plt.figure(figsize=(10,10))
sns.set()
for i,var in enumerate(missing_num):
  plt.subplot(2,2,i+1)
  sns.distplot(df2_num[var], bins = 20, kde_kws = {'linewidth': 8, 'color' : 'r'})
  sns.distplot(df3_mean[var], bins = 20, kde_kws = {'linewidth': 3, 'color' : 'g'})

df4_median = df2_num.fillna(df2_num.median())
df4_median.isnull().sum().sum()

plt.figure(figsize=(10,10))
sns.set()
for i,var in enumerate(missing_num):
  plt.subplot(2,2,i+1)
  sns.distplot(df2_num[var], bins = 20, kde_kws = {'linewidth': 8, 'color' : 'r'})
  sns.distplot(df3_mean[var], bins = 20, kde_kws = {'linewidth': 3, 'color' : 'g'})
  sns.distplot(df4_median[var], bins = 20, kde_kws = {'linewidth': 5, 'color' : 'b'})
  plt.legend()

#for checking outliers

sns.set()
for i,var in enumerate(missing_num):
    plt.subplot(3,1,1)
    sns.boxplot(df[var])
    plt.subplot(3,1,2)
    sns.boxplot(df3_mean[var])
    plt.subplot(3,1,3)
    sns.boxplot(df4_median[var])

df_concat = pd.concat([df[missing_num], df2_num[missing_num], df3_mean[missing_num], df4_median[missing_num]], axis =1)

df_concat[df_concat.isnull().any(axis=1)].head()

#missing value imputation